digraph "packages" {
rankdir=BT
charset="utf-8"
"deep_river" [color="black", label=<deep_river>, shape="box", style="solid"];
"deep_river.__version__" [color="black", label=<deep_river.__version__>, shape="box", style="solid"];
"deep_river.anomaly" [color="black", label=<deep_river.anomaly>, shape="box", style="solid"];
"deep_river.anomaly.ae" [color="black", label=<deep_river.anomaly.ae>, shape="box", style="solid"];
"deep_river.anomaly.probability_weighted_ae" [color="black", label=<deep_river.anomaly.probability_weighted_ae>, shape="box", style="solid"];
"deep_river.anomaly.rolling_ae" [color="black", label=<deep_river.anomaly.rolling_ae>, shape="box", style="solid"];
"deep_river.anomaly.scaler" [color="black", label=<deep_river.anomaly.scaler>, shape="box", style="solid"];
"deep_river.base" [color="black", label=<deep_river.base>, shape="box", style="solid"];
"deep_river.classification" [color="black", label=<deep_river.classification>, shape="box", style="solid"];
"deep_river.classification.classifier" [color="black", label=<deep_river.classification.classifier>, shape="box", style="solid"];
"deep_river.classification.rolling_classifier" [color="black", label=<deep_river.classification.rolling_classifier>, shape="box", style="solid"];
"deep_river.classification.zoo" [color="black", label=<deep_river.classification.zoo>, shape="box", style="solid"];
"deep_river.regression" [color="black", label=<deep_river.regression>, shape="box", style="solid"];
"deep_river.regression.multioutput" [color="black", label=<deep_river.regression.multioutput>, shape="box", style="solid"];
"deep_river.regression.regressor" [color="black", label=<deep_river.regression.regressor>, shape="box", style="solid"];
"deep_river.regression.rolling_regressor" [color="black", label=<deep_river.regression.rolling_regressor>, shape="box", style="solid"];
"deep_river.regression.zoo" [color="black", label=<deep_river.regression.zoo>, shape="box", style="solid"];
"deep_river.utils" [color="black", label=<deep_river.utils>, shape="box", style="solid"];
"deep_river.utils.estimator_checks" [color="black", label=<deep_river.utils.estimator_checks>, shape="box", style="solid"];
"deep_river.utils.hooks" [color="black", label=<deep_river.utils.hooks>, shape="box", style="solid"];
"deep_river.utils.layer_adaptation" [color="black", label=<deep_river.utils.layer_adaptation>, shape="box", style="solid"];
"deep_river.utils.params" [color="black", label=<deep_river.utils.params>, shape="box", style="solid"];
"deep_river.utils.tensor_conversion" [color="black", label=<deep_river.utils.tensor_conversion>, shape="box", style="solid"];
"deep_river.utils.test_estimators" [color="black", label=<deep_river.utils.test_estimators>, shape="box", style="solid"];
"deep_river.utils.test_layer_adaptation" [color="black", label=<deep_river.utils.test_layer_adaptation>, shape="box", style="solid"];
"deep_river.utils.test_tensor_conversion" [color="black", label=<deep_river.utils.test_tensor_conversion>, shape="box", style="solid"];
"deep_river" -> "deep_river.__version__" [arrowhead="open", arrowtail="none"];
"deep_river.anomaly" -> "deep_river.anomaly.ae" [arrowhead="open", arrowtail="none"];
"deep_river.anomaly" -> "deep_river.anomaly.probability_weighted_ae" [arrowhead="open", arrowtail="none"];
"deep_river.anomaly" -> "deep_river.anomaly.rolling_ae" [arrowhead="open", arrowtail="none"];
"deep_river.anomaly" -> "deep_river.anomaly.scaler" [arrowhead="open", arrowtail="none"];
"deep_river.anomaly.ae" -> "deep_river.base" [arrowhead="open", arrowtail="none"];
"deep_river.anomaly.ae" -> "deep_river.utils" [arrowhead="open", arrowtail="none"];
"deep_river.anomaly.ae" -> "deep_river.utils.layer_adaptation" [arrowhead="open", arrowtail="none"];
"deep_river.anomaly.ae" -> "deep_river.utils.tensor_conversion" [arrowhead="open", arrowtail="none"];
"deep_river.anomaly.probability_weighted_ae" -> "deep_river.anomaly" [arrowhead="open", arrowtail="none"];
"deep_river.anomaly.probability_weighted_ae" -> "deep_river.anomaly.ae" [arrowhead="open", arrowtail="none"];
"deep_river.anomaly.probability_weighted_ae" -> "deep_river.utils" [arrowhead="open", arrowtail="none"];
"deep_river.anomaly.probability_weighted_ae" -> "deep_river.utils.tensor_conversion" [arrowhead="open", arrowtail="none"];
"deep_river.anomaly.rolling_ae" -> "deep_river.base" [arrowhead="open", arrowtail="none"];
"deep_river.anomaly.rolling_ae" -> "deep_river.utils.tensor_conversion" [arrowhead="open", arrowtail="none"];
"deep_river.base" -> "deep_river.utils" [arrowhead="open", arrowtail="none"];
"deep_river.base" -> "deep_river.utils.hooks" [arrowhead="open", arrowtail="none"];
"deep_river.base" -> "deep_river.utils.layer_adaptation" [arrowhead="open", arrowtail="none"];
"deep_river.classification" -> "deep_river.classification.classifier" [arrowhead="open", arrowtail="none"];
"deep_river.classification" -> "deep_river.classification.rolling_classifier" [arrowhead="open", arrowtail="none"];
"deep_river.classification" -> "deep_river.classification.zoo" [arrowhead="open", arrowtail="none"];
"deep_river.classification.classifier" -> "deep_river.base" [arrowhead="open", arrowtail="none"];
"deep_river.classification.classifier" -> "deep_river.utils.layer_adaptation" [arrowhead="open", arrowtail="none"];
"deep_river.classification.classifier" -> "deep_river.utils.tensor_conversion" [arrowhead="open", arrowtail="none"];
"deep_river.classification.rolling_classifier" -> "deep_river.base" [arrowhead="open", arrowtail="none"];
"deep_river.classification.rolling_classifier" -> "deep_river.classification" [arrowhead="open", arrowtail="none"];
"deep_river.classification.rolling_classifier" -> "deep_river.utils.tensor_conversion" [arrowhead="open", arrowtail="none"];
"deep_river.classification.zoo" -> "deep_river.classification" [arrowhead="open", arrowtail="none"];
"deep_river.regression" -> "deep_river.regression.multioutput" [arrowhead="open", arrowtail="none"];
"deep_river.regression" -> "deep_river.regression.regressor" [arrowhead="open", arrowtail="none"];
"deep_river.regression" -> "deep_river.regression.rolling_regressor" [arrowhead="open", arrowtail="none"];
"deep_river.regression" -> "deep_river.regression.zoo" [arrowhead="open", arrowtail="none"];
"deep_river.regression.multioutput" -> "deep_river.base" [arrowhead="open", arrowtail="none"];
"deep_river.regression.multioutput" -> "deep_river.utils" [arrowhead="open", arrowtail="none"];
"deep_river.regression.regressor" -> "deep_river.base" [arrowhead="open", arrowtail="none"];
"deep_river.regression.regressor" -> "deep_river.utils.tensor_conversion" [arrowhead="open", arrowtail="none"];
"deep_river.regression.rolling_regressor" -> "deep_river.base" [arrowhead="open", arrowtail="none"];
"deep_river.regression.rolling_regressor" -> "deep_river.regression" [arrowhead="open", arrowtail="none"];
"deep_river.regression.rolling_regressor" -> "deep_river.utils.tensor_conversion" [arrowhead="open", arrowtail="none"];
"deep_river.regression.zoo" -> "deep_river.regression" [arrowhead="open", arrowtail="none"];
"deep_river.utils" -> "deep_river.utils.estimator_checks" [arrowhead="open", arrowtail="none"];
"deep_river.utils" -> "deep_river.utils.params" [arrowhead="open", arrowtail="none"];
"deep_river.utils" -> "deep_river.utils.tensor_conversion" [arrowhead="open", arrowtail="none"];
"deep_river.utils.test_estimators" -> "deep_river" [arrowhead="open", arrowtail="none"];
"deep_river.utils.test_estimators" -> "deep_river.utils" [arrowhead="open", arrowtail="none"];
"deep_river.utils.test_layer_adaptation" -> "deep_river.utils.layer_adaptation" [arrowhead="open", arrowtail="none"];
"deep_river.utils.test_tensor_conversion" -> "deep_river.utils" [arrowhead="open", arrowtail="none"];
}
