@article{montiel2021river,
  title={River: machine learning for streaming data in Python},
  author={Montiel, Jacob and Halford, Max and Mastelini, Saulo Martiello
          and Bolmier, Geoffrey and Sourty, Raphael and Vaysse, Robin and Zouitine, Adil
          and Gomes, Heitor Murilo and Read, Jesse and Abdessalem, Talel and Bifet, Albert},
  year={2021},
  journal={Journal of Machine Learning Research},
  volume={22},
  number={110},
  pages={1--8},
  url={http://jmlr.org/papers/v22/20-1380.html}
}
@misc{kulbach2024retrospectivetutorialopportunitieschallenges,
  title={A Retrospective of the Tutorial on Opportunities and Challenges of Online Deep Learning},
  author={Cedric Kulbach and Lucas Cazzonelli and Hoang-Anh Ngo and Minh-Huong Le-Nguyen and Albert Bifet},
  year={2024},
  eprint={2405.17222},
  archivePrefix={arXiv},
  primaryClass={cs.LG},
  url={https://arxiv.org/abs/2405.17222},
  doi={10.48550/arXiv.2405.17222}
}
@inproceedings{cazzonelli2022detecting,
  title={Detecting anomalies with autoencoders on data streams},
  author={Cazzonelli, Lucas and Kulbach, Cedric},
  booktitle={Joint European Conference on Machine Learning and Knowledge Discovery in Databases},
  pages={258--274},
  year={2022},
  organization={Springer},
  doi={10.1007/978-3-031-26387-3_16}
}
@inproceedings{paszke2017automatic,
  title={Automatic differentiation in PyTorch},
  author={Paszke, Adam and Gross, Sam and Chintala, Soumith and Chanan, Gregory and Yang, Edward and DeVito, Zachary and Lin, Zeming and Desmaison, Alban and Antiga, Luca and Lerer, Adam},
  booktitle={NIPS-W},
  year={2017}
}
@article{bayram2022concept,
  title={From concept drift to model degradation: An overview on performance-aware drift detectors},
  author={Bayram, Firas and Ahmed, Bestoun S and Kassler, Andreas},
  journal={Knowledge-Based Systems},
  volume={245},
  pages={108632},
  year={2022},
  publisher={Elsevier},
  doi={10.1016/j.knosys.2022.108632}
}
@article{lu2018learning,
  title={Learning under concept drift: A review},
  author={Lu, Jie and Liu, Anjin and Dong, Fan and Gu, Feng and Gama, Joao and Zhang, Guangquan},
  journal={IEEE transactions on knowledge and data engineering},
  volume={31},
  number={12},
  pages={2346--2363},
  year={2018},
  publisher={IEEE},
  doi={10.1109/TKDE.2018.2876857}
}
@article{10.5555/1756006.1859903,
author = {Bifet, Albert and Holmes, Geoff and Kirkby, Richard and Pfahringer, Bernhard},
title = {MOA: Massive Online Analysis},
year = {2010},
issue_date = {3/1/2010},
publisher = {JMLR.org},
volume = {11},
issn = {1532-4435},
abstract = {Massive Online Analysis (MOA) is a software environment for implementing algorithms and running experiments for online learning from evolving data streams. MOA includes a collection of offline and online methods as well as tools for evaluation. In particular, it implements boosting, bagging, and Hoeffding Trees, all with and without Na\"{\i}ve Bayes classifiers at the leaves. MOA supports bi-directional interaction with WEKA, the Waikato Environment for Knowledge Analysis, and is released under the GNU GPL license.},
journal = {J. Mach. Learn. Res.},
month = aug,
pages = {1601–1604},
numpages = {4}
}
@article{10.5555/3291125.3309634,
author = {Montiel, Jacob and Read, Jesse and Bifet, Albert and Abdessalem, Talel},
title = {Scikit-multiflow: a multi-output streaming framework},
year = {2018},
issue_date = {January 2018},
publisher = {JMLR.org},
volume = {19},
number = {1},
issn = {1532-4435},
abstract = {scikit-multiflow is a framework for learning from data streams and multi-output learning in Python. Conceived to serve as a platform to encourage the democratization of stream learning research, it provides multiple state-of-the-art learning methods, data generators and evaluators for different stream learning problems, including single-output, multi-output and multi-label. scikit-multiflow builds upon popular open source frameworks including scikit-learn, MOA and MEKA. Development follows the FOSS principles. Quality is enforced by complying with PEP8 guidelines, using continuous integration and functional testing. The source code is available at https://github.com/scikit-multiflow/scikit-multiflow.},
journal = {J. Mach. Learn. Res.},
month = jan,
pages = {2915–2914},
numpages = {5},
keywords = {drift detection, machine learning, multi-output, python, stream data}
}
@software{creme,
  title = {{creme}, a {P}ython library for online machine learning},
  author = {Halford, Max and Bolmier, Geoffrey and Sourty, Raphael and Vaysse, Robin and Zouitine, Adil},
  url = {https://github.com/MaxHalford/creme},
  version = {0.6.1},
  date = {2020-06-10},
  year = {2019}
}
@misc{capymoaCapyMOAx2024,
	author = {},
	title = {{C}apy{M}{O}{A} \&#x2014; {C}apy{M}{O}{A} --- capymoa.org},
	howpublished = {\url{https://capymoa.org}},
	year = {},
	note = {[Accessed 18-11-2024]},
}
@misc{githubGitHubOnlinemldeepriver,
	author = {},
	title = {{G}it{H}ub - online-ml/deep-river --- github.com},
	howpublished = {\url{https://github.com/online-ml/deep-river}},
	year = {},
	note = {[Accessed 18-11-2024]},
}
